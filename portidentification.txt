package tstproj;

import java.awt.EventQueue;
import java.net.Socket;

import javax.swing.JFrame;

public class PortIdentification {

	private JFrame frame;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					PortIdentification window = new PortIdentification();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public PortIdentification() {
		initialize();
		int startPortRange=79;
	       int stopPortRange=260;       
	 String nme="80";
	 
	 
	        for(int i=startPortRange; i <=stopPortRange; i++)
	        {
	                       try
	                       {
	                        Socket ServerSok = new Socket("192.168.0.29",i);
	                        System.out.println("Port in use: " + i );
	                        
	                        String check=Integer.toString(i);
	                        
	                        if(nme.equals(check)) {
	                        	
	                        	System.out.println("vulnerable port" + i );
	                        	
	                        	
	                        }
	                        ServerSok.close();
	                       }
	                       catch (Exception e)
	                       {
	                           //e.printStackTrace(); 
	                       }
	        //System.out.println("Port not in use: " + i );
	        }
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 450, 300);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

}
